---
- name: create system group
  group:
    name: "{{ msteams_system_group }}"
    system: true
    state: present
  when: msteams_system_group != "root"
  become: true
  tags: msteams

- name: create system user
  user:
    name: "{{ msteams_system_user }}"
    system: true
    shell: "/sbin/nologin"
    group: "{{ msteams_system_group }}"
    createhome: false
  when: msteams_system_user != "root"
  become: true
  tags: msteams

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ msteams_system_user }}"
    group: "{{ msteams_system_group }}"
    mode: 0755
  with_items:
    - "{{ msteams_config_dir }}"
    - "{{ msteams_template_dir }}"
  become: true
  tags: msteams

- name: check if is installed
  stat:
    path: "{{ msteams_binary_install_dir }}/msteams"
  register: __msteams_is_installed
  become: true
  tags: msteams

- name: gather currently installed version
  command: "{{ msteams_binary_install_dir }}/msteams -version"
  args:
    warn: false
  changed_when: false
  register: __msteams_current_version_output
  when: __msteams_is_installed.stat.exists
  become: true
  tags: msteams

- name: download binary to bin folder
  get_url:
    url: "https://github.com/prometheus-msteams/prometheus-msteams/releases/download/v{{ msteams_version }}/prometheus-msteams-linux-{{ go_arch }}"
    dest: "/tmp/msteams-{{ msteams_version }}.linux-{{ go_arch }}"
  environment: "{{proxy_env}}"
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  check_mode: false
  become: true
  tags: msteams
  when: (not __msteams_is_installed.stat.exists) or (__msteams_current_version_output.stdout != msteams_version)

- name: propagate binaries
  copy:
    src: "/tmp/msteams-{{ msteams_version }}.linux-{{ go_arch }}"
    dest: "{{ msteams_binary_install_dir }}/msteams"
    mode: 0755
    owner: root
    group: root
  notify: restart msteams
  become: true
  tags: prometheus
  when: (not __msteams_is_installed.stat.exists) or (__msteams_current_version_output.stdout != msteams_version)

- name: configure
  template:
    src: "msteams.config.yml.j2"
    dest: "{{ msteams_config_dir }}/{{ msteams_config_file }}"
    owner: "{{ msteams_system_user }}"
    group: "{{ msteams_system_group }}"
    mode: 0644
  notify: restart msteams
  become: true
  tags: msteams

- name: configure templates
  copy:
    src: "{{ item }}.tmpl"
    dest: "{{ msteams_template_dir }}/{{ item }}.tmpl"
    owner: "{{ msteams_system_user }}"
    group: "{{ msteams_system_group }}"
    mode: 0644
  with_items: "{{ msteams_config_templates }}"
  notify: restart msteams
  become: true
  tags: msteams

- name: create systemd service unit
  template:
    src: msteams.service.j2
    dest: /etc/systemd/system/msteams.service
    owner: root
    group: root
    mode: 0644
  notify: restart msteams
  become: true
  tags: msteams

- name: ensure msteams service is started and enabled
  systemd:
    daemon_reload: true
    name: msteams
    state: restarted
    enabled: true
  become: true
  tags: msteams
